name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.6.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run migrations
        working-directory: protocol
        run: sqlx migrate run

      - name: Backend tests
        working-directory: protocol
        run: cargo test -p attn_api

      - name: Rust format check
        working-directory: protocol
        run: cargo fmt --all -- --check

      - name: Rust clippy
        working-directory: protocol
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Splitter unit tests
        working-directory: protocol
        run: cargo test -p splitter --lib

      - name: Splitter program tests
        working-directory: protocol
        run: cargo test -p splitter --features program-test

      - name: Cargo audit
        working-directory: protocol
        run: cargo audit

      - name: Frontend build
        run: pnpm --filter dapp-prod build
